/* const */
:root {
  --bold: 700;
  --color-emphasis: #d24f40;
  --color-interactive-disabled: #ccc;
  --color-interactive-muted: #008b4a77;
  --color-interactive-hover: #008b4aaa;
  --color-interactive-outline: #ddd;
  --color-interactive: #008b4a;
  --content-padding: 2em;
  --cmmm-link-width: 4em;
  --header-height: 2.5em;
  --main-bg-color: #fff;
  --main-font-color: black;
  --title-width: 14em;
  --transition-duration: 100ms;
  --visualization-count-width: 11em;
}

/* derived from const */
:root {
  --border: 1px solid var(--main-font-color);
  --squareChartHeight: calc(17vh - var(--header-height));
  --transition-color: color var(var(--transition-duration)) ease;
}

/* responsive */
:root {
  --content-section-width: 48%;
  --info-display: block;
  --main-font-size: 20px;
  --map-height: 80%;
  --map-width: 50%;
  --menu-left: 50%;
  --menu-top: var(--header-height);
  --menu-width: 50%;
  --navigation-height: var(--header-height);
  --title-display: inline-block;
  --title-font-size: 0.7em;
  --title-inner-width: 50%;
  --visualization-height: calc(100% - var(--header-height));
}

@media (max-width: 907px) {
  :root {
    --content-section-width: 100%;
    --info-display: none;
    --main-font-size: 16px;
    --map-height: 50%;
    --map-width: 100%;
    --menu-left: 0;
    --menu-top: 0;
    --menu-width: 100%;
    --navigation-height: 6em;
    --title-display: inline;
    --title-font-size: 1em;
    --title-inner-width: 100%;
    --visualization-height: calc(100% - (var(--header-height) + var(--navigation-height)));
  }
}

@media (max-width: 580px) {
  :root {
    --title-font-size: 0.85em;
  }
}


html,
body {
  color: var(--main-font-color);
  padding: 0;
  margin: 0;
  font-family: "Rubik", sans-serif;
  font-size: var(--main-font-size);
  line-height: 1.2;
}

h1, h2, h3, h4, p {
  margin: 0;
}

h1 {
  font-size: 1em;
}

h2, .headline, .number {
  font-size: 1.5em;
  line-height: 1.2;
}

h3, .subheadline {
  font-size: 1.2em;
  line-height: 1.2;
}

small, .margins {
  font-size: 0.7em;
  line-height: 1.14 !important;
  display: block;
}


.number {
  font-family: "Rubik Mono One", monospace;
  font-weight: 400;
}

em {
  font-style: normal;
  font-weight: var(--bold);
}



a, .link {
  color: inherit;
  text-decoration: none;
  transition: var(--transition-color);
}

a:hover, .link:hover {
  opacity: 0.6;
}

.link {
  cursor: pointer;
}


* {
  box-sizing: border-box;
}

.inlineDivs div {
  display: inline;
}

.reference {
	color: var(--color-emphasis);
}

.comparison {
	color: var(--color-interactive);
}

/* TODO: Move to Map config */
.mapboxgl-control-container {
  display: none;
}



button,
butto[type="button"],
button[type="reset"],
button[type="submit"] {
  -webkit-appearance: button;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; 
  font-size: 100%; 
  line-height: 1.15; 
  margin: 0;
  padding: 0;
}

button, span[role="button"] { 
  -moz-appearance: none;
  -webkit-appearance: none;
  background-color: transparent;
  border-color: transparent;
  color: var(--color-interactive);
  cursor: pointer;
  font-weight: var(--bold);
  text-align: left;
  text-decoration: underline;
  text-transform: none;
  white-space: normal;
}

button:hover, span[role="button"]:hover {
  color: var(--color-interactive-hover);
}

button:focus,
select:focus, span[role="button"]:focus {
  color: var(--color-interactive-hover);
  outline-offset: 0.05em;
  outline-width: 1px;
  outline-style: solid;
  outline-color: var(--color-interactive-outline);
} 

button:disabled,
button[disabled] {
  color: var(--color-interactive-disabled);
  cursor: not-allowed;
}

.triangle {
  padding-left: 1em;
  position: relative;

}

.triangle::before {
    font-family: "Rubik", sans-serif;
    content: "â–¶\FE0E";
    display: block;
    left: 0.2em;
    position: absolute;
    transition: all var(--transition-duration);
    font-size: 0.7em;
    top: 25%;
}

.triangle:hover::before {
    left: 0.4em;
}

button.padded {
  padding-left: 1em;
  padding-right: 1em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  border-width: 1px;
  border-style: solid;
  border-color: var(--color-interactive);
  border-radius: 0.2em;
}

button.padded:hover {
  border-color: var(--color-interactive-hover);
}

button.padded:disabled,
button.padded[disabled] {
  color: var(--color-interactive-disabled);
  border-color: var(--color-interactive-disabled);
}

.mdx {
  flex-wrap: wrap;
  height: 100%;
  justify-content: space-between;
  max-width: 1400px;
  overflow: scroll;
  padding: 2em;
  padding-bottom: 5em;
}

.mdx > section {
  width: var(--content-section-width);
}

.mdx h1 {
  margin-bottom: 1em;
}

.mdx h2 {
  margin-bottom: 0.4em;
}

.mdx h2:not(:first-child) {
  margin-top: 2em;
}

.mdx h3 {
  margin-bottom: 1em;
  margin-top: 1em;
}

.mdx p {
  margin-bottom: 1em;
}

.images p a {
  display: block;
  width: 30%;
}


.images img {
  width: auto;
  max-width: 100%;
  max-height: 2.75em;
}

.connectButtons {
  display: inline;
}

.connectButtons:hover button {
  color: var(--color-interactive-hover);
}

.connectButtons:hover .triangle::before {
  left: 0.4em;
}

svg .cmmm {
  fill: #ff1d25;
}

div[data-state='disabled'] button {
  color: var(--color-interactive-muted)
}

div[data-state='disabled'] button:hover {
  color: var(--color-interactive-hover)
}

div[data-state='active'] button {
  color: var(--main-bg-color);
  text-decoration: none;
}

div[data-state='active'] .buttonSpan {
  background-color: var(--color-interactive);
  border-radius: 0.2em;
  padding-left: 0.2em;
  padding-right: 0.2em;
}

div[data-state='active'] .triangle {
  padding-left: 0.2em;
  padding-right: 0.2em;
  margin-right: -0.1em;
  margin-left: 1em;
}

div[data-state='active'] .triangle::before {
  color: var(--color-interactive);
  left: -1em;
}

div[data-state='active'] .triangle:hover::before {
  color: var(--color-interactive-hover);
  left: -0.75em;
}

div[data-state='active'] .connectButtons:hover .buttonSpan {
  background-color: var(--color-interactive-hover);
  color: var(--main-bg-color);
  text-decoration: none;
}

div[data-state='active'] .connectButtons:hover .triangle::before {
  color: var(--color-interactive-hover);
  left: -0.75em;
}
